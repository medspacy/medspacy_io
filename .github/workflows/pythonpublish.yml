# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Upload Python Package

on:
  release:
    types: [published]
  workflow_dispatch:  # Allow manual triggering
    inputs:
      publish:
        description: 'Publish to PyPI'
        required: false
        default: false
        type: boolean
      create_release:
        description: 'Create GitHub release'
        required: false
        default: true
        type: boolean

permissions:
  contents: read

jobs:
  get-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
    - uses: actions/checkout@v5.0.0
    - name: Set up Python
      uses: actions/setup-python@v5.6.0
      with:
        python-version: '3.11'
    - name: Get version from project
      id: get_version
      run: |
        python -c "
        import sys
        sys.path.insert(0, '.')
        from medspacy_io.version import __version__
        print(f'version={__version__}')
        " >> $GITHUB_OUTPUT

  build:
    needs: get-version
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v5.0.0
    - name: Set up Python
      uses: actions/setup-python@v5.6.0
      with:
        python-version: '3.11'  # Use a single recent Python version for building
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Build package
      run: python -m build
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4.6.2
      with:
        name: dist
        path: dist/

  test-install:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
    
    steps:
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5.6.0
      with:
        python-version: ${{ matrix.python-version }}
    - name: Download build artifacts
      uses: actions/download-artifact@v4.3.0
      with:
        name: dist
        path: dist/
    - name: Test wheel installation
      run: |
        pip install dist/*.whl
        python -c "import medspacy_io; print('Successfully imported medspacy_io')"

  create-release:
    needs: [get-version, build, test-install]
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && inputs.create_release
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v5.0.0
    - name: Download build artifacts
      uses: actions/download-artifact@v4.3.0
      with:
        name: dist
        path: dist/
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ needs.get-version.outputs.version }}
        name: Release v${{ needs.get-version.outputs.version }}
        body: |
          Release version ${{ needs.get-version.outputs.version }}
          
          Built from commit: ${{ github.sha }}
        files: dist/*
        draft: false
        prerelease: false

  publish:
    needs: [build, test-install]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && inputs.publish)
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4.3.0
      with:
        name: dist
        path: dist/
    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@v1.12.4
